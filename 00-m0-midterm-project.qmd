---
title: ""
---

![](plot/hr-analytics-banner.png)

## Instructions

Welcome to the midterm project exercise! In this exercise, you will work on a project that involves analyzing employee attrition and performance using the HR Analytics Employee Attrition & Performance dataset. The primary goal is to develop insights into the factors that contribute to employee attrition and provide recommendations for HR interventions that could help reduce attrition and improve overall employee satisfaction and performance.

Download the project files using this link: [Midterm project files](https://drive.google.com/drive/folders/12mCp9qPo1G7WsxB--umPVyF4dPpUrU9F?usp=sharing). Be sure to download the entire folder `midterm-econ148-project-exercise`. The project files include the dataset and a template Quarto markdown file that you will use to complete the exercise.

First, rename the `lastname-firstname.qmd` file to your actual last name and first name. For example, if your name is John Doe, the file should be named `doe-john.qmd`. Afterward, open the R project `20241007-econ148-project-exercise-1.Rproj` by double-clicking the file and render the Quarto markdown file to generate the HTML file.

## Project overiew

In this project, we will explore employee attrition and performance using the HR Analytics Employee Attrition & Performance dataset. The primary goal is to develop insights into the factors that contribute to employee attrition.

The dataset used for this project provides information about employee demographics, performance metrics, and various satisfaction ratings. By analyzing a range of factors, including demographic data, job satisfaction, work-life balance, and job role, we aim to help businesses identify key areas where they can improve employee retention.

```{r}
#| label: variable descriptions

## datatable function from DT package create an HTML widget display of the dataset
## install DT package if the package is not yet available in your R environment
readxl::read_excel("dataset/dataset-variable-description.xlsx") |> 
  DT::datatable()
```

## Data wrangling and management

### Libraries {.unnumbered .unlisted}

::: callout-tip
## Task: Load the necessary libraries

Before we start working on the dataset, we need to load the necessary libraries that will be used for data wrangling, analysis and visualization. Make sure to load the following libraries here. For packages to be installed, you can use the `install.packages` function. There are packages to be installed later on this project, so make sure to install them as needed and load them here.
:::

```{r}
#| label: libraries
# load all your libraries here


```

### Data importation

::: callout-tip
## Task 2.1. Merging dataset

-   Import the two dataset `Employee.csv` and `PerformanceRating.csv`. Save the `Employee.csv` as `employee_dta` and `PerformanceRating.csv` as `perf_rating_dta`.

-   Merge the two dataset using the `left_join` function from `dplyr`. Use the `EmployeeID` variable as the varible to join by. You may read more information about the `left_join` function [here](https://dplyr.tidyverse.org/reference/mutate-joins.html).

-   Save the merged dataset as `hr_perf_dta` and display the dataset using the `datatable` function from `DT` package.
:::

```{r}

## import the two data here


## merge employee_dta and perf_rating_dta using left_join function.
## save the merged dataset as hr_perf_dta



## Use the datatable from DT package to display the merged dataset


```

### Data management

::: callout-tip
## Task 2.2. Standardizing variable names

-   Using the `clean_names` function from `janitor` package, standardize the variable names by using the recommended naming of variables.

-   Save the renamed variables as `hr_perf_dta` to update the dataset.
:::

```{r}

## clean names using the janitor packages and save as hr_perf_dta


## display the renamed hr_perf_dta using datatable function


```

::: callout-tip
## Task 2.3. Recode data entries

-   Create a new variable `cat_education` wherein `education` is `1` = `No formal education`; `2` = `High school`; `3` = `Bachelor`; `4` = `Masters`; `5` = `Doctorate`. Use the `case_when` function to accomplish this task.

-   Similarly, create new variables `cat_envi_sat`, `cat_job_sat`, and `cat_relation_sat` for `environment_satisfaction`, `job_satisfaction`, and `relationship_satisfaction`, respectively. Re-code the values accordingly as `1` = `Very dissatisfied`; `2` = `Dissatisfied`; `3` = `Neutral`; `4` = `Satisfied`; and `5` = `Very satisfied`.

-   Create new variables `cat_work_life_balance`, `cat_self_rating`, `cat_manager_rating` for `work_life_balance`, `self_rating`, and `manager_rating`, respectively. Re-code accordingly as `1` = `Unacceptable`; `2` = `Needs improvement`; `3` = `Meets expectation`; `4` = `Exceeds expectation`; and `5` = `Above and beyond`.

-   Create a new variable `bi_attrition` by transforming `attrition` variable as a numeric variabe. Re-code accordingly as `No` = `0`, and `Yes` = `1`.

-   Save all the changes in the `hr_perf_dta`. Note that saving the changes with the same name will update the dataset with the new variables created.
:::

```{r}
## create cat_education



## create cat_envi_sat,  cat_job_sat, and cat_relation_sat




## create cat_work_life_balance, cat_self_rating, and cat_manager_rating





## create bi_attrition



## print the updated hr_perf_dta using datatable function


```

## Exploratory data analysis

### Descriptive statistics of employee attrition

::: callout-tip
## Task 3.1. Breakdown of attrition by key variables

-   Select the variables `attrition`, `job_role`, `department`, `age`, `salary`, `job_satisfaction`, and `work_life_balance.` Save as `attrition_key_var_dta`.

-   Compute and plot the attrition rate across `job_role`, `department`, and `age`, `salary`, `job_satisfaction`, and `work_life_balance`. To compute for the attrition rate, group the dataset by job role. Afterward, you can use the `count` function to get the frequency of attrition for each job role and then divide it by the total number of observations. Save the computation as `pct_attrition`. Do not forget to ungroup before storing the output. Store the output as `attrition_rate_job_role`.

-   Plot for the attrition rate across `job_role` has been done for you! Study each line of code. You have the freedom to customize your plot accordingly. Show your creativity!
:::

```{r}
## selecting attrition key variables and save as `attrition_key_var_dta`




## compute the attrition rate across job_role and save as attrition_rate_job_role



## print attrition_rate_job_role



```

```{r}
## Plot the attrition rate




```

### Analysis of compensation and turnover

::: callout-tip
## Task 3.2. Analyzing compensation and turnover

-   Compare the average monthly income of employees who left the company (`bi_attrition = 1`) and those who stayed (`bi_attrition = 0`). Use the `t.test` function to conduct a t-test and determine if there is a significant difference in average monthly income between the two groups. Save the results in a variable called `attrition_ttest_results`.

-   Install the `report` package and use the `report` function to generate a report of the t-test results.

-   Install the `ggstatsplot` package and use the `ggbetweenstats` function to visualize the distribution of monthly income for employees who left and those who stayed. Make sure to map the `bi_attrition` variable to the `x` argument and the `salary` variable to the `y` argument.

-   Visualize the `salary` variable for employees who left and those who stayed using `geom_histogram` with `geom_freqpoly`. Make sure to facet the plot by the `bi_attrition` variable and apply `alpha` on the histogram plot.

-   Provide recommendations on whether revising compensation policies could be an effective retention strategy.
:::

```{r}
## compare the average monthly income of employees who left and those who stayed




## print the results of the t-test



```

```{r}
## install the report package and use the report function to generate a report of the t-test results




```

```{r}
# install ggstatsplot package and use ggbetweenstats function to visualize the distribution of monthly income for employees who left and those who stayed




```

```{r}
# create histogram and frequency polygon of salary for employees who left and those who stayed




```

::: callout-note
## Discussion:

Provide your discussion here.
:::

### Employee satisfaction and performance analysis

::: callout-tip
## Task 3.3. Analyzing employee satisfaction and performance

-   Analyze the average performance ratings (both `ManagerRating` and `SelfRating`) of employees who left vs. those who stayed. Use the `group_by` and `count` functions to calculate the average performance ratings for each group.

-   Visualize the distribution of `SelfRating` for employees who left and those who stayed using a bar plot. Use the `ggplot` function to create the plot and map the `SelfRating` variable to the `x` argument and the `bi_attrition` variable to the `fill` argument.

-   Similarly, visualize the distribution of `ManagerRating` for employees who left and those who stayed using a bar plot. Make sure to map the `ManagerRating` variable to the `x` argument and the `bi_attrition` variable to the `fill` argument.

-   Create a boxplot of `salary` by `job_satisfaction` and `bi_attrition` to analyze the relationship between salary, job satisfaction, and attrition. Use the `geom_boxplot` function to create the plot and map the `salary` variable to the `x` argument, the `job_satisfaction` variable to the `y` argument, and the `bi_attrition` variable to the `fill` argument. You need to transform the `job_satisfaction` and `bi_attrition` variables into factors before creating the plot or within the `ggplot` function.

-   Discuss the results of the analysis and provide recommendations for HR interventions based on the findings.
:::

```{r}
# Analyze the average performance ratings (both ManagerRating and SelfRating) of employees who left vs. those who stayed.



```

```{r}
# Visualize the distribution of SelfRating for employees who left and those who stayed using a bar plot.




```

```{r}
# Visualize the distribution of ManagerRating for employees who left and those who stayed using a bar plot.



```

```{r}
# create a boxplot of salary by job_satisfaction and bi_attrition to analyze the relationship between salary, job satisfaction, and attrition.



```

::: callout-note
## Discussion:

Provide your discussion here.
:::

### Work-life balance and retention strategies

::: callout-tip
## Task 3.4. Analyzing work-life balance and retention strategies

At this point, you are already well aware of the dataset and the possible factors that contribute to employee attrition. Using your R skills, accomplish the following tasks:

-   Analyze the distribution of WorkLifeBalance ratings for employees who left versus those who stayed.

-   Use visualizations to show the differences.

-   Assess whether employees with poor work-life balance are more likely to leave.

You have the freedom how you will accomplish this task. Be creative and provide insights that will help HR develop effective retention strategies.
:::
